spring.application.name = currency-exchange
server.port = 8000
spring.jpa.defer-datasource-initialization=true
# This is the port we are defining for spring config server.
spring.config.import=optional:configserver:http://localhost:8888

spring.jpa.show-sql=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.h2.console.enabled=true

# To be safe , we do this (Naming Server)
eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka

# Setting up the number of max attempts the retry framework try to call
# a url , if no response , then sends a message back to us.
resilience4j.retry.instances.sample-api.maxAttempts=5

# It makes each subsequent request wait a bit longer.
resilience4j.retry.instances.sample-api.waitDuration=1s
resilience4j.retry.instances.sample-api.enableExponentialBackoff=true

#resilience4j.circuitbreaker.instances.default.failureRateThreshold=90

# Rate Limiter Configuration.
resilience4j.ratelimiter.instances.default.limitForPeriod=2
resilience4j.ratelimiter.instances.default.limitRefreshPeriod=10s

# You can also give different instances name and assign it to the
# REST API.
resilience4j.bulkhead.instances.default.maxConcurrentCalls=10
resilience4j.bulkhead.instances.sample-api.maxConcurrentCalls=10

# Zipkin Tracing server configuration (Tracing and Logging Pattern)
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# CHANGE - KUBERNETES
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true